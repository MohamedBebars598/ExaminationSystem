<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>